{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "baseResourceName": {
            "minLength": 1,
            "type": "String",
            "metadata": {
                "description": "The base name to use for the resources that will be provisioned."
            }
        },
        "botClientId": {
            "minLength": 36,
            "maxLength": 36,
            "type": "String",
            "metadata": {
                "description": "The client ID of the bot Azure AD app, e.g., 123e4567-e89b-12d3-a456-426655440000."
            }
        },
        "botClientSecret": {
            "minLength": 1,
            "type": "SecureString",
            "metadata": {
                "description": "The client secret of the bot Azure AD app."
            }
        },
        "senderUPNList": {
            "minLength": 1,
            "type": "String",
            "metadata": {
                "description": "Semicolon-delimited list of the user principal names (UPNs) allowed to send messages."
            }
        },
        "customDomainOption": {
            "defaultValue": "Azure Front Door",
            "allowedValues": [
                "Custom domain name (recommended)",
                "Azure Front Door"
            ],
            "type": "String",
            "metadata": {
                "description": "How the app will be hosted on a domain that is not *.azurewebsites.net. Azure Front Door is an easy option that the template can set up automatically, but it comes with ongoing monthly costs. "
            }
        },
        "appDisplayName": {
            "defaultValue": "Company Communicator",
            "minLength": 1,
            "type": "String",
            "metadata": {
                "description": "The app (and bot) display name."
            }
        },
        "appDescription": {
            "defaultValue": "Broadcast messages to multiple teams and people in one go",
            "minLength": 1,
            "type": "String",
            "metadata": {
                "description": "The app (and bot) description."
            }
        },
        "appIconUrl": {
            "defaultValue": "https://raw.githubusercontent.com/OfficeDev/microsoft-teams-company-communicator-app/master/Manifest/color.png",
            "minLength": 1,
            "type": "String",
            "metadata": {
                "description": "The link to the icon for the app. It must resolve to a PNG file."
            }
        },
        "tenantId": {
            "defaultValue": "[subscription().tenantId]",
            "minLength": 1,
            "maxLength": 36,
            "type": "String",
            "metadata": {
                "description": "The ID of the tenant to which the app will be deployed."
            }
        },
        "hostingPlanSku": {
            "defaultValue": "Standard",
            "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
            ],
            "type": "String",
            "metadata": {
                "description": "The pricing tier for the hosting plan."
            }
        },
        "hostingPlanSize": {
            "defaultValue": "1",
            "allowedValues": [
                "1",
                "2",
                "3"
            ],
            "type": "String",
            "metadata": {
                "description": "The size of the hosting plan (small, medium, or large)."
            }
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
        "botName": "[parameters('baseResourceName')]",
        "botAppName": "[parameters('baseResourceName')]",
        "botAppDomain": "[concat(variables('botAppName'), '.azurewebsites.net')]",
        "botAppUrl": "[concat('https://', variables('botAppDomain'))]",
        "hostingPlanName": "[parameters('baseResourceName')]",
        "storageAccountName": "[uniquestring(concat(resourceGroup().id, parameters('baseResourceName')))]",
        "appInsightsName": "[parameters('baseResourceName')]",
        "prepFunctionAppName": "[concat(parameters('baseResourceName'), '-prep-function')]",
        "sendFunctionAppName": "[concat(parameters('baseResourceName'), '-function')]",
        "dataFunctionAppName": "[concat(parameters('baseResourceName'), '-data-function')]",
        "serviceBusNamespaceName": "[parameters('baseResourceName')]",
        "serviceBusSendQueueName": "company-communicator-send",
        "serviceBusDataQueueName": "company-communicator-data",
        "serviceBusPrepareToSendQueueName": "company-communicator-prep",
        "serviceBusExportQueueName": "company-communicator-export",
        "defaultSASKeyName": "RootManageSharedAccessKey",
        "authRuleResourceId": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', variables('serviceBusNamespaceName'), variables('defaultSASKeyName'))]",
        "sharedSkus": [
            "Free",
            "Shared"
        ],
        "isSharedPlan": "[contains(variables('sharedSkus'), parameters('hostingPlanSku'))]",
        "skuFamily": "[if(equals(parameters('hostingPlanSku'), 'Shared'), 'D', take(parameters('hostingPlanSku'), 1))]",
        "useFrontDoor": "[equals(parameters('customDomainOption'), 'Azure Front Door')]",
        "frontDoorName": "[parameters('baseResourceName')]",
        "frontDoorDomain": "[toLower(concat(variables('frontDoorName'), '.azurefd.net'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-02-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage"
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2016-09-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[if(variables('isSharedPlan'), concat(variables('skuFamily'), '1'), concat(variables('skuFamily'), parameters('hostingPlanSize')))]",
                "tier": "[parameters('hostingPlanSku')]",
                "size": "[concat(variables('skuFamily'), parameters('hostingPlanSize'))]",
                "family": "[variables('skuFamily')]",
                "capacity": 0
            },
            "properties": {
                "name": "[variables('hostingPlanName')]",
                "hostingEnvironment": "",
                "numberOfWorkers": 1
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2016-08-01",
            "name": "[variables('botAppName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]",
                "[resourceId('Microsoft.Web/sites', variables('prepFunctionAppName'))]",
                "[resourceId('Microsoft.Web/sites', variables('sendFunctionAppName'))]",
                "[resourceId('Microsoft.Web/sites', variables('dataFunctionAppName'))]"
            ],
            "kind": "app",
            "properties": {
                "name": "[variables('botAppName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "enabled": true,
                "reserved": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "siteConfig": {
                    "alwaysOn": "[not(variables('isSharedPlan'))]",
                    "appSettings": [
                        {
                            "name": "PROJECT",
                            "value": "Source/Microsoft.Teams.Apps.CompanyCommunicator/Microsoft.Teams.Apps.CompanyCommunicator.csproj"
                        },
                        {
                            "name": "SITE_ROLE",
                            "value": "app"
                        },
                        {
                            "name": "AzureAd:TenantId",
                            "value": "[parameters('tenantId')]"
                        },
                        {
                            "name": "AzureAd:ClientId",
                            "value": "[parameters('botClientId')]"
                        },
                        {
                            "name": "AzureAd:ClientSecret",
                            "value": "[parameters('botClientSecret')]"
                        },
                        {
                            "name": "AzureAd:ApplicationIdURI",
                            "value": "[if(variables('useFrontDoor'), concat('api://', variables('frontDoorDomain')), '')]"
                        },
                        {
                            "name": "MicrosoftAppId",
                            "value": "[parameters('botClientId')]"
                        },
                        {
                            "name": "MicrosoftAppPassword",
                            "value": "[parameters('botClientSecret')]"
                        },
                        {
                            "name": "StorageAccountConnectionString",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "ServiceBusConnection",
                            "value": "[listkeys(variables('authRuleResourceId'), '2017-04-01').primaryConnectionString]"
                        },
                        {
                            "name": "AllowedTenants",
                            "value": "[parameters('tenantId')]"
                        },
                        {
                            "name": "DisableTenantFilter",
                            "value": "false"
                        },
                        {
                            "name": "AuthorizedCreatorUpns",
                            "value": "[parameters('senderUPNList')]"
                        },
                        {
                            "name": "DisableAuthentication",
                            "value": "false"
                        },
                        {
                            "name": "DisableCreatorUpnCheck",
                            "value": "false"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "10.15.2"
                        }
                    ],
                    "cors": {
                        "supportCredentials": true,
                        "allowedOrigins": [
                            "[concat('https://', variables('frontDoorDomain'))]"
                        ]
                    }
                }
            }
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2015-05-01",
            "name": "[variables('appInsightsName')]",
            "location": "[parameters('location')]",
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('botAppName'))]": "Resource"
            },
            "properties": {
                "Application_Type": "web",
                "Request_Source": "rest"
            }
        },
        {
            "type": "Microsoft.BotService/botServices",
            "apiVersion": "2018-07-12",
            "name": "[variables('botName')]",
            "location": "global",
            "sku": {
                "name": "F0"
            },
            "kind": "sdk",
            "properties": {
                "displayName": "[parameters('appDisplayName')]",
                "description": "[parameters('appDescription')]",
                "iconUrl": "[parameters('appIconUrl')]",
                "msaAppId": "[parameters('botClientId')]",
                "endpoint": "[concat(variables('botAppUrl'), '/api/messages')]",
                "developerAppInsightKey": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
            },
            "resources": [
                {
                    "type": "Microsoft.BotService/botServices/channels",
                    "apiVersion": "2018-07-12",
                    "name": "[concat(variables('botName'), '/MsTeamsChannel')]",
                    "location": "global",
                    "dependsOn": [
                        "[concat('Microsoft.BotService/botServices/', variables('botName'))]"
                    ],
                    "sku": {
                        "name": "F0"
                    },
                    "properties": {
                        "channelName": "MsTeamsChannel",
                        "location": "global",
                        "properties": {
                            "isEnabled": true
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.ServiceBus/namespaces",
            "apiVersion": "2017-04-01",
            "name": "[variables('serviceBusNamespaceName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Basic",
                "tier": "Basic"
            },
            "resources": [
                {
                    "type": "Queues",
                    "apiVersion": "2017-04-01",
                    "name": "[variables('serviceBusSendQueueName')]",
                    "dependsOn": [
                        "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
                    ],
                    "properties": {
                        "lockDuration": "PT5M",
                        "maxSizeInMegabytes": 1024,
                        "requiresDuplicateDetection": false,
                        "requiresSession": false,
                        "defaultMessageTimeToLive": "P14D",
                        "deadLetteringOnMessageExpiration": false,
                        "enableBatchedOperations": true,
                        "duplicateDetectionHistoryTimeWindow": "PT10M",
                        "maxDeliveryCount": 10,
                        "status": "Active",
                        "enablePartitioning": false,
                        "enableExpress": false
                    }
                },
                {
                    "type": "Queues",
                    "apiVersion": "2017-04-01",
                    "name": "[variables('serviceBusDataQueueName')]",
                    "dependsOn": [
                        "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
                    ],
                    "properties": {
                        "lockDuration": "PT5M",
                        "maxSizeInMegabytes": 1024,
                        "requiresDuplicateDetection": false,
                        "requiresSession": false,
                        "defaultMessageTimeToLive": "P14D",
                        "deadLetteringOnMessageExpiration": false,
                        "enableBatchedOperations": true,
                        "duplicateDetectionHistoryTimeWindow": "PT10M",
                        "maxDeliveryCount": 10,
                        "status": "Active",
                        "enablePartitioning": false,
                        "enableExpress": false
                    }
                },
                {
                    "type": "Queues",
                    "apiVersion": "2017-04-01",
                    "name": "[variables('serviceBusPrepareToSendQueueName')]",
                    "dependsOn": [
                        "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
                    ],
                    "properties": {
                        "lockDuration": "PT5M",
                        "maxSizeInMegabytes": 1024,
                        "requiresDuplicateDetection": false,
                        "requiresSession": false,
                        "defaultMessageTimeToLive": "P14D",
                        "deadLetteringOnMessageExpiration": false,
                        "enableBatchedOperations": true,
                        "duplicateDetectionHistoryTimeWindow": "PT10M",
                        "maxDeliveryCount": 10,
                        "status": "Active",
                        "enablePartitioning": false,
                        "enableExpress": false
                    }
                },
                {
                    "type": "Queues",
                    "apiVersion": "2017-04-01",
                    "name": "[variables('serviceBusExportQueueName')]",
                    "dependsOn": [
                        "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
                    ],
                    "properties": {
                        "lockDuration": "PT5M",
                        "maxSizeInMegabytes": 1024,
                        "requiresDuplicateDetection": false,
                        "requiresSession": false,
                        "defaultMessageTimeToLive": "P14D",
                        "deadLetteringOnMessageExpiration": false,
                        "enableBatchedOperations": true,
                        "duplicateDetectionHistoryTimeWindow": "PT10M",
                        "maxDeliveryCount": 10,
                        "status": "Active",
                        "enablePartitioning": false,
                        "enableExpress": false
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2016-08-01",
            "name": "[variables('prepFunctionAppName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]"
            ],
            "kind": "functionapp",
            "properties": {
                "name": "[variables('prepFunctionAppName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "hostingEnvironment": "",
                "clientAffinityEnabled": false,
                "siteConfig": {
                    "alwaysOn": "[not(variables('isSharedPlan'))]",
                    "appSettings": [
                        {
                            "name": "PROJECT",
                            "value": "Source\\Microsoft.Teams.Apps.CompanyCommunicator.Prep.Func\\Microsoft.Teams.Apps.CompanyCommunicator.Prep.Func.csproj"
                        },
                        {
                            "name": "SITE_ROLE",
                            "value": "function"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]"
                        },
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(variables('prepFunctionAppName'))]"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('microsoft.insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "MicrosoftAppId",
                            "value": "[parameters('botClientId')]"
                        },
                        {
                            "name": "MicrosoftAppPassword",
                            "value": "[parameters('botClientSecret')]"
                        },
                        {
                            "name": "TenantId",
                            "value": "[parameters('tenantId')]"
                        },
                        {
                            "name": "StorageAccountConnectionString",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "ServiceBusConnection",
                            "value": "[listkeys(variables('authRuleResourceId'), '2017-04-01').primaryConnectionString]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2016-08-01",
            "name": "[variables('sendFunctionAppName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]"
            ],
            "kind": "functionapp",
            "properties": {
                "name": "[variables('sendFunctionAppName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "hostingEnvironment": "",
                "clientAffinityEnabled": false,
                "siteConfig": {
                    "alwaysOn": "[not(variables('isSharedPlan'))]",
                    "appSettings": [
                        {
                            "name": "PROJECT",
                            "value": "Source\\Microsoft.Teams.Apps.CompanyCommunicator.Send.Func\\Microsoft.Teams.Apps.CompanyCommunicator.Send.Func.csproj"
                        },
                        {
                            "name": "SITE_ROLE",
                            "value": "function"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]"
                        },
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(variables('sendFunctionAppName'))]"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('microsoft.insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "MaxNumberOfAttempts",
                            "value": "5"
                        },
                        {
                            "name": "MicrosoftAppId",
                            "value": "[parameters('botClientId')]"
                        },
                        {
                            "name": "MicrosoftAppPassword",
                            "value": "[parameters('botClientSecret')]"
                        },
                        {
                            "name": "StorageAccountConnectionString",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "ServiceBusConnection",
                            "value": "[listkeys(variables('authRuleResourceId'), '2017-04-01').primaryConnectionString]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2016-08-01",
            "name": "[variables('dataFunctionAppName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]"
            ],
            "kind": "functionapp",
            "properties": {
                "name": "[variables('dataFunctionAppName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "hostingEnvironment": "",
                "clientAffinityEnabled": false,
                "siteConfig": {
                    "alwaysOn": "[not(variables('isSharedPlan'))]",
                    "appSettings": [
                        {
                            "name": "PROJECT",
                            "value": "Source\\Microsoft.Teams.Apps.CompanyCommunicator.Data.Func\\Microsoft.Teams.Apps.CompanyCommunicator.Data.Func.csproj"
                        },
                        {
                            "name": "SITE_ROLE",
                            "value": "function"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]"
                        },
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(variables('dataFunctionAppName'))]"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('microsoft.insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "MicrosoftAppId",
                            "value": "[parameters('botClientId')]"
                        },
                        {
                            "name": "MicrosoftAppPassword",
                            "value": "[parameters('botClientSecret')]"
                        },
                        {
                            "name": "CleanUpScheduleTriggerTime",
                            "value": "30 23 * * *"
                        },
                        {
                            "name": "CleanUpFile",
                            "value": "1"
                        },
                        {
                            "name": "StorageAccountConnectionString",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "ServiceBusConnection",
                            "value": "[listkeys(variables('authRuleResourceId'), '2017-04-01').primaryConnectionString]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/frontDoors",
            "apiVersion": "2019-04-01",
            "name": "[variables('frontDoorName')]",
            "location": "Global",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('botAppName'))]"
            ],
            "properties": {
                "backendPools": [
                    {
                        "name": "backendPool1",
                        "properties": {
                            "backends": [
                                {
                                    "address": "[variables('botAppDomain')]",
                                    "backendHostHeader": "[variables('botAppDomain')]",
                                    "httpPort": 80,
                                    "httpsPort": 443,
                                    "priority": 1,
                                    "weight": 50,
                                    "enabledState": "Enabled"
                                }
                            ],
                            "healthProbeSettings": {
                                "id": "[resourceId('Microsoft.Network/frontDoors/healthProbeSettings', variables('frontDoorName'), 'healthProbeSettings1')]"
                            },
                            "loadBalancingSettings": {
                                "id": "[resourceId('Microsoft.Network/frontDoors/loadBalancingSettings', variables('frontDoorName'), 'loadBalancingSettings1')]"
                            },
                            "resourceState": "Enabled"
                        }
                    }
                ],
                "healthProbeSettings": [
                    {
                        "name": "healthProbeSettings1",
                        "properties": {
                            "intervalInSeconds": 255,
                            "path": "/health",
                            "protocol": "Https",
                            "resourceState": "Enabled"
                        }
                    }
                ],
                "frontendEndpoints": [
                    {
                        "name": "frontendEndpoint1",
                        "properties": {
                            "hostName": "[variables('frontDoorDomain')]",
                            "sessionAffinityEnabledState": "Disabled",
                            "sessionAffinityTtlSeconds": 0
                        }
                    }
                ],
                "loadBalancingSettings": [
                    {
                        "name": "loadBalancingSettings1",
                        "properties": {
                            "additionalLatencyMilliseconds": 0,
                            "sampleSize": 4,
                            "successfulSamplesRequired": 2
                        }
                    }
                ],
                "routingRules": [
                    {
                        "name": "routingRule1",
                        "properties": {
                            "frontendEndpoints": [
                                {
                                    "id": "[resourceId('Microsoft.Network/frontDoors/frontendEndpoints', variables('frontDoorName'), 'frontendEndpoint1')]"
                                }
                            ],
                            "acceptedProtocols": [
                                "Https"
                            ],
                            "patternsToMatch": [
                                "/*"
                            ],
                            "routeConfiguration": {
                                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                                "forwardingProtocol": "HttpsOnly",
                                "backendPool": {
                                    "id": "[resourceId('Microsoft.Network/frontDoors/backendPools', variables('frontDoorName'), 'backendPool1')]"
                                }
                            },
                            "enabledState": "Enabled"
                        }
                    },
                    {
                        "name": "routingRule2",
                        "properties": {
                            "frontendEndpoints": [
                                {
                                    "id": "[resourceId('Microsoft.Network/frontDoors/frontendEndpoints', variables('frontDoorName'), 'frontendEndpoint1')]"
                                }
                            ],
                            "acceptedProtocols": [
                                "Https"
                            ],
                            "patternsToMatch": [
                                "/api/*"
                            ],
                            "routeConfiguration": {
                                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration",
                                "customFragment": null,
                                "customHost": "[variables('botAppDomain')]",
                                "customPath": "",
                                "redirectProtocol": "HttpsOnly",
                                "customQueryString": null,
                                "redirectType": "PermanentRedirect"
                            },
                            "enabledState": "Enabled"
                        }
                    }
                ],
                "enabledState": "Enabled",
                "friendlyName": "[variables('frontDoorName')]"
            },
            "condition": "[variables('useFrontDoor')]"
        }
    ],
    "outputs": {
        "botId": {
            "type": "String",
            "value": "[parameters('botClientId')]"
        },
        "appDomain": {
            "type": "String",
            "value": "[if(variables('useFrontDoor'), variables('frontDoorDomain'), concat('Please create a custom domain name for ', variables('botAppDomain'), ' and use that in the manifest'))]"
        }
    }
}
